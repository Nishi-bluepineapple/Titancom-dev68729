<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($http,$q,$location) {
  /* widget controller */
  var c = this;
	if(c.data.gm_display_enabled=='true'){
		c.filters = {};
		c.filters.showFilters = true;
		c.filters.widgetFilters = true;
		c.gm_header = "";
		c.gm_main_header = c.data.gm_header;
		c.showViewLeaderboardPageBtn = false;
		c.shareRank = c.data.share_my_rank;
		
		c.getLeaderBoardDataUrl = function(context_type,context,time_frame){
			var url = "";
			switch(context_type){
				case 'community':
					url = 'api/sn_communities/v1/community/leaderboard';
					break;
				case 'forum':
					if(context)
						url = 'api/sn_communities/v1/community/forums/'+context+'/leaderboard';
					break;
				case 'topic':
					if(context)
						url = 'api/sn_communities/v1/community/topics/'+context+'/leaderboard';
					break;
			}
			return url;
		};
	
		c.getLeaderBoardData = function(context_type,context,time_frame,limit){
			if(context_type){
				var url = c.getLeaderBoardDataUrl(context_type,context);
				var method = "GET";
				var params = {};
				if(time_frame)
					params.time_frame = time_frame;

				if(limit)
					params.limit = limit;
				
				params.my_rank = c.shareRank;
				if(url)
					c.httpService(url,method,params).then(function successCallback(response){
						if(response && response.result && (response.result.status==404 || response.result.status==403)){
							c.data.disableWidget = true;
						}
						else if(response && response.result && response.result.data){
							 if(response.result.data.leaderboard && response.result.data.leaderboard.length > 0){			
								c.leaderboardRowData = response.result.data.leaderboard;
                                c.userRankData = response.result.data.userRank;
							
                               // Add rank class styling identifier
                               if (c.shareRank == 'true') {
                                    if (c.userRankData && c.userRankData.userObject) {
									    if(c.userRankData.points && (parseInt(c.userRankData.points)) > 0 && (parseInt(c.userRankData.rank) < 1000000)){
											
                                            c.userRankData.rankClass = "share_rank";
										    c.leaderboardRowData.push(c.userRankData); 
									    }
                                    } else {
                                        for (var i = 0; i < c.leaderboardRowData.length; i++) {
                                            var usr = c.leaderboardRowData[i];
                                            if (usr.loggedInUser)
                                                usr.rankClass = "share_rank";
                                        }
                                   }
                               }

							  c.table.rowData = c.getLeaderBoardTableData(c.leaderboardRowData);
							
							  if(response.result.data.leaderboard.length >= limit )
								 c.showViewLeaderboardPageBtn = true;
							  else
								 c.showViewLeaderboardPageBtn = false;
							}else{
								c.table.rowData = [];
								c.showViewLeaderboardPageBtn = false;
							}

							c.gm_header = "";
							if(response.result.data.context)
								c.gm_header = response.result.data.context;
// 							else if(context_type == 'community')
// 								c.gm_header = c.data.i18n.community;
						}
					},function errorCallback(){

					});
			}
		};
	
		c.getLeaderBoardTableData = function(responseData){
			if(Array.isArray(responseData)){
				var len = responseData.length;
				for(var i=0; i<len; i++){
					responseData[i].points = responseData[i].points + " " + c.data.i18n.points;
					if(!jQuery.isEmptyObject(responseData[i].userObject)){
						var link = c.getProfileLink(responseData[i].userObject.userId);
						responseData[i].userObject.profileLink = link;
						if(responseData[i].userObject.userImage)
							responseData[i].userObject.userImage = responseData[i].userObject.userImage + "?t=small";
						responseData[i].userObject.isLoaded = true;
					}else{
						responseData[i].userObject = {
							initials : "CU",
							isLoaded : true,
							name : "Community User"
						};
					}
				}
			}
			return responseData;
		};
	
		c.httpService = function(url, method, params){
			var deferred = $q.defer();
			var postData = {};
			var putData = {};
			if(params){
				if(method == "PUT")
					angular.extend(putData,params);
				else
					angular.extend(postData,params);
			}
			$http({
				method: method,
				url: url,
				data: putData,
				params:postData,
				headers:{'Content-Type':'application/json'}
			}).then(function successCallback(response) {
				deferred.resolve(response.data);
			}, function errorCallback(reason) {
				deferred.reject(reason);
			});
			return deferred.promise;
		};
	
		c.filters.gm_time_frame = [
			{'id':'all_time','text':c.data.i18n.all_time}
		];
	
		if(c.data.this_month == "true")
			c.filters.gm_time_frame.push({'id':'month','text':c.data.i18n.month});

		c.filters.gm_context = c.data.gm_context_id;
	
		c.filters.selectedFilters = {
			'gm_time_frame':'all_time'
		};
		c.table = {};
	
		c.table.cols = [
			{'value':['rank'],'displayValue':c.data.i18n.rank,'cssClass':['rankCol'],'type':'simple'},
			{'value':['userObject','userObject.name','points'],'displayValue':c.data.i18n.user,'cssClass':['userCol','usersubcol1','usersubcol2','usersubrow1 navlink','usersubrow2'],'type':'composite'}
		];
	
		c.table.rowData = [];
	
		c.getProfileLink = function(profileId){
			if(profileId)
				return $rootScope.portal.url_suffix + "?id=community_user_profile&user=" + profileId;
			else return;
		}
	
		c.onTimeFrameChange = function(val){
			c.filters.selectedFilters.gm_time_frame = val;
			c.getLeaderBoardData(c.data.gm_context_type,c.filters.gm_context,val,c.data.limit);
		};
	
		c.getLeaderBoardData(c.data.gm_context_type,c.filters.gm_context,c.filters.selectedFilters.gm_time_frame,c.data.limit);

		c.navtoleaderboardPage = function(){
			var time_frame = c.filters.selectedFilters.gm_time_frame;
			var context_type = c.data.gm_context_type;
			var context = c.filters.gm_context;	$location.search({'id':'community_leaderboard_page','time_frame':time_frame,'context_type':context_type,'context':context});
		};
	}
	
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.gm_leaderboard{&#13;
  .table{&#13;
    margin-bottom: 0px;&#13;
    border-collapse: separate; &#13;
  }&#13;
  .table&gt;tbody&gt;tr&gt;td{&#13;
  	border-top:1px solid transparent;&#13;
   }&#13;
&#13;
  .gm-list-filter{&#13;
  	.gm-filter {&#13;
      padding-bottom: 10px;&#13;
    }&#13;
    .gm-select2.select2-container .select2-choice {&#13;
      font-size: inherit;&#13;
    }&#13;
  }&#13;
  .leaderboard-sub-header{&#13;
  	color:$text-muted;&#13;
    font-size:15px;&#13;
    line-height:25px;&#13;
  }&#13;
  .gm-list-filter {&#13;
  }&#13;
   .self-clear:after {&#13;
    content: "";&#13;
    clear: both;&#13;
    display: table;&#13;
  }&#13;
  &#13;
  .avatar-container{&#13;
    width:4.2rem;&#13;
    height:4.2rem;&#13;
    &#13;
    .avatar.soloAvatar .sub-avatar{&#13;
    	line-height:4.2rem;&#13;
    }&#13;
  }&#13;
  .rankCol{&#13;
    vertical-align:middle;&#13;
    color:$brand-primary;&#13;
    font-weight:500;&#13;
    text-align: center;&#13;
  }&#13;
  .userCol{&#13;
    vertical-align:middle;&#13;
  }  &#13;
  .usersubcol1{&#13;
  	display:inline-block;&#13;
    width:40px;&#13;
    margin-right:10px;&#13;
  }&#13;
  .usersubcol2{&#13;
  	display:inline-block;&#13;
    width:calc(100% - 50px);&#13;
    vertical-align:top;&#13;
  }&#13;
  .usersubrow1{&#13;
  	height:50%;&#13;
    color:$text-color;&#13;
    font-weight:500;&#13;
    text-overflow: ellipsis;&#13;
    white-space: nowrap;&#13;
    overflow: hidden; &#13;
  }&#13;
  .lb-width{&#13;
    width: 100%;&#13;
  }  &#13;
  @media only screen and (min-width:990px){&#13;
        /* styles for browsers larger than 990px; */&#13;
    .username-width{&#13;
     max-width: 135px;&#13;
    }&#13;
   }&#13;
  .usersubrow2{&#13;
  	height:50%;&#13;
    color:$text-muted;&#13;
  }&#13;
  .emptytable{&#13;
  	text-align:center;&#13;
    color:$text-muted;&#13;
    position:relative;&#13;
    min-height:100px;&#13;
     .emptytablemsg{&#13;
    	width:100%;&#13;
        //position:absolute;&#13;
      	//top:30%;&#13;
    }&#13;
  }&#13;
  .navlink a{&#13;
  	color:$text-color;&#13;
  }&#13;
  .leadeboardpagelink{&#13;
    margin-top: 15px;&#13;
  	width:100%;&#13;
  }&#13;
}&#13;
&#13;
.share_rank{  &#13;
     td{&#13;
        border-top:1px solid $link-color !important;&#13;
        border-bottom:1px solid $link-color !important;&#13;
      }&#13;
     td:first-child {&#13;
       border-left:1px solid $link-color !important;&#13;
       border-top-left-radius: 2px !important;&#13;
       border-bottom-left-radius: 2px!important;}&#13;
     td:last-child { &#13;
      border-right:1px solid $link-color !important;&#13;
      border-top-right-radius: 2px !important;&#13;
      border-bottom-right-radius: 2px !important; }    &#13;
 }&#13;
.avatar-container .avatar.soloAvatar .sub-avatar{&#13;
  color: $gray-darker;&#13;
  background-color: $gray-lighter;&#13;
}&#13;
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Copy of Community LeaderBoard</name>
        <option_schema>[{"name":"context_type","default_value":"community","label":"Leaderboard Type","type":"choice","choices":[{"label":"community","value":"community"},{"label":"forum","value":"forum"},{"label":"topic","value":"topic"}]},{"displayValue":"Forum","hint":"Select Leaderboard type=forum, and choose a specific forum to always show leaderboard for it. If left empty, then forum is picked from page context","name":"forum_id","label":"Anchor to Specific Forum","type":"reference","value":"sn_communities_forum","ed":{"reference":"sn_communities_forum"}},{"displayValue":"Topic","hint":"Select Leaderboard type=topic, and choose a specific topic to always show leaderboard for it. If left empty, then topic is picked from page context","name":"topic_id","label":"Anchor to Specific  Topic","type":"reference","value":"sn_communities_topic","ed":{"reference":"sn_communities_topic"}},{"hint":"Enable leaderboard for this month.","name":"this_month","default_value":"false","label":"Enable leaderboard for this month.","type":"boolean"},{"hint":"Number of profiles to display. (Max 10)","name":"limit","default_value":"5","label":"Number of profiles to display. (Max 10)","type":"string"},{"name":"share_my_rank","default_value":"true","label":"Share My Rank","type":"boolean"}]</option_schema>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
//data.accessibilityOn = gs.getUser().getPreference("glide.ui.accessibility") == 'true';
	data.gm_display_enabled = gs.getProperty('sn_communities.enable_gamification');
	if(data.gm_display_enabled == "true"){
		data.gm_context_type = options.context_type ? options.context_type : 'community';
		data.gm_context_id = "";
		data.share_my_rank = options.share_my_rank;
		if(data.gm_context_type != 'community'){
			data.gm_context_id = options[data.gm_context_type+'_id'] ? options[data.gm_context_type+'_id'] : $sp.getParameter("sys_id");
		}	
		data.gm_user_count = options.gm_user_count;
		data.gm_time_frame = (options.gm_time_frame)?options.gm_time_frame:'all_time';
		data.this_month = options.this_month;
	    data.gm_header =  gs.getMessage("Leaderboard");
	    data.limit = options.limit ? options.limit : 5;
		data.topicsEnabled = sn_communities.CommunityConstants.ENABLE_TOPICS;
		data.disableWidget = false;
		if(data.gm_context_type == "topic" && !data.topicsEnabled){
			data.disableWidget = true;
		}
		var i18nContext= data.gm_context_type;
		switch(i18nContext){
			case 'community':
				i18nContext = gs.getMessage('community');
				break;
			case 'forum':
				i18nContext = gs.getMessage('forum');
				break;
			case 'topic':
				i18nContext = gs.getMessage('topic');
				break;
		}
		data.limit = ((options.limit > 0) && (options.limit <= 10)) ? options.limit : 10;
	    data.i18n = {
			'points':gs.getMessage('Points'),
			'month':gs.getMessage('This Month'),
			'all_time':gs.getMessage('All'),
			'rank':gs.getMessage('Rank'),
			'user':gs.getMessage('User'),
			'community':gs.getMessage('Communities'),
			'leaderboardpagebtn':gs.getMessage('View Leaderboard'),
			'noleaderboardData':gs.getMessage('There has been no activity in this '),
			'context':i18nContext,
			'subject': gs.getMessage('Regarding your contributions'),
			'profileLink': gs.getMessage("{0} Profile")
		};
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-04-20 12:13:35</sys_created_on>
        <sys_id>ea982ce9db585410730a7b3868961954</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Copy of Community LeaderBoard</sys_name>
        <sys_package display_value="Titan Encircle" source="x_236494_titan_enc">fd74bb58db109010730a7b386896199e</sys_package>
        <sys_policy/>
        <sys_scope display_value="Titan Encircle">fd74bb58db109010730a7b386896199e</sys_scope>
        <sys_update_name>sp_widget_ea982ce9db585410730a7b3868961954</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-04-20 12:13:35</sys_updated_on>
        <template><![CDATA[  <div aria-label="{{c.gm_header}}" ng-if="c.data.gm_display_enabled=='true' && !c.data.disableWidget" class="gm_leaderboard panel panel-default csm-widget">
    <div class="panel-heading">
      <h2 class="panel-title">
        <div class="leaderboard-header"><span ng-bind="::c.gm_main_header"></span></div>
        <div class="leaderboard-sub-header"><span ng-bind="c.gm_header"></span></div>
      </h2>          
    </div>
    <div class="panel-body">
      <gm-leaderboard-filters ng-if="c.filters.gm_time_frame.length > 1"filterdata="c.filters" on-timeframe-change="c.onTimeFrameChange($val)"></gm-leaderboard-filters> 
      <gm-leaderboard-table ng-if="c.table.rowData.length > 0" tabledata="c.table" subject="::c.data.i18n.subject" messages="::c.data.i18n"></gm-leaderboard-table>
      <div class="emptytable" ng-if="c.table.rowData.length == 0">
       <div class="emptytablemsg">
         <span ng-bind="::c.data.i18n.noleaderboardData"></span>
         <span ng-bind="::c.data.i18n.context"></span>
       </div>  
     </div>
      <button ng-if="c.showViewLeaderboardPageBtn" class="btn btn-default leadeboardpagelink" ng-click="c.navtoleaderboardPage()"><span ng-bind="::c.data.i18n.leaderboardpagebtn"></span></button>
    </div>
  </div>
  
  ]]></template>
    </sp_widget>
</record_update>
